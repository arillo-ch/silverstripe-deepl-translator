(()=>{var a="",n="Es gibt ungespeicherte \xC4nderungen am Glossar. Seite dennoch verlassen?",h=o=>(o.preventDefault(),o.returnValue=n),c=o=>({...o,newEntry:null,glossaryEntries:[],glossaryEntriesForTable:[],search:a,isLoading:!0,isFirstLoad:!0,sorter:{field:null,dir:"ASC"},isDirty:!1,init(){n=this.isDirtMessage||n,this.$watch("glossaryEntries",()=>{this.computeGlossaryEntriesForTable(),this.$nextTick(()=>{this.isFirstLoad||(this.isDirty=!0)})}),this.$watch("isDirty",s=>{s?window.addEventListener("beforeunload",h):(console.log("remove beforeunload"),window.removeEventListener("beforeunload",h))}),this.$watch("sorter",()=>this.computeGlossaryEntriesForTable()),this.$watch("search",()=>this.computeGlossaryEntriesForTable()),this.fetchGlossaryEntries(),this.sorter={field:this.locales.find(s=>s.IsGlobalDefault==!0).Lang,dir:"ASC"}},async fetchGlossaryEntries(){this.isLoading=!0,fetch(this.apiUrl("glossaryEntries"),{method:"get"}).then(async s=>{let e=await s.json();if(!s.ok){let t=e?.message||s.status;return Promise.reject(t)}this.prepareGlossaryEntries(e),this.setupNewEntry(),this.isLoading=!1,setTimeout(()=>this.isFirstLoad=!1,100)}).catch(s=>{console.error(s)})},prepareGlossaryEntries(s){this.glossaryEntries=s.map(e=>({...e,id:this.generateId(),isNew:!1}))},setupNewEntry(){let s={};this.locales.forEach(e=>{s[e.Lang]=""}),this.newEntry=s},createNewEntry(){let s={...this.newEntry,id:this.generateId(),isNew:!0};this.glossaryEntries.push(s),this.setupNewEntry()},isNewEntryValid(){return Object.keys(this.newEntry).reduce((s,e)=>s&&this.newEntry[e]===a?!1:s,!0)},generateId(){return typeof crypto>"u"?"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx".replace(/[xy]/g,s=>{let e=Math.random()*16|0;return(s=="x"?e:e&3|8).toString(16)}):crypto.randomUUID()},computeGlossaryEntriesForTable(){let s=this.locales.map(({Lang:t})=>t),e=this.search.toLowerCase();this.glossaryEntriesForTable=[...this.glossaryEntries.filter(t=>s.reduce((r,i)=>!r&&t[i]&&t[i]!==a&&t[i].toLowerCase().includes(e)?!0:r,!1)).sort((t,r)=>{let i=t[this.sorter.field].toLowerCase(),l=r[this.sorter.field].toLowerCase();return i>l?this.sorter.dir=="ASC"?1:-1:i<l?this.sorter.dir=="ASC"?-1:1:0})]},sorterBy(s){this.sorter.field===s?this.sorter.dir=this.sorter.dir=="ASC"?"DESC":"ASC":this.sorter={field:s,dir:"ASC"}},async saveGlossaries(){this.isLoading=!0;let s=new FormData;s.append("glossaryEntries",JSON.stringify(this.glossaryEntries)),fetch(this.apiUrl("saveGlossaries"),{method:"post",body:s}).then(async e=>{let t=await e.json();if(!e.ok){let r=t?.message||e.status;return Promise.reject(r)}this.prepareGlossaryEntries(t.glossaryEntries),this.setupNewEntry(),this.isDirty=!1}).catch(e=>{console.error(e)}).finally(()=>this.isLoading=!1)},removeEntry(s){this.glossaryEntries=[...this.glossaryEntries.filter(e=>e.id!==s)]},apiUrl(s=null){return s?`${this.apiBase}${s}`:this.apiBase}});document.addEventListener("alpine:init",()=>{console.log("alpine:init"),Alpine.data("deeplGlossary",c)});})();
